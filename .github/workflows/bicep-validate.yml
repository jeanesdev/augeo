name: Bicep Validation

on:
  pull_request:
    paths:
      - 'infrastructure/bicep/**'
      - '.github/workflows/bicep-validate.yml'
  push:
    branches:
      - main
      - 'feature/**'
    paths:
      - 'infrastructure/bicep/**'
  workflow_call:
    inputs:
      environment:
        description: 'Environment to validate'
        required: false
        type: string
        default: 'dev'

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    name: Validate Bicep Templates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bicep CLI
        run: |
          az bicep install
          az bicep version

      - name: Validate Bicep Syntax
        run: |
          echo "::group::Bicep Build (main.bicep)"
          az bicep build --file infrastructure/bicep/main.bicep
          echo "::endgroup::"

          echo "::group::Bicep Build (main-minimal.bicep)"
          az bicep build --file infrastructure/bicep/main-minimal.bicep
          echo "::endgroup::"

      - name: Validate Bicep Modules
        run: |
          echo "::group::Validate Individual Modules"
          for module in infrastructure/bicep/modules/*.bicep; do
            echo "Validating $(basename $module)..."
            az bicep build --file "$module"
          done
          echo "::endgroup::"

      - name: Azure Login (Optional - Only for What-If)
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
        continue-on-error: true
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Run Deployment Validation
        if: env.AZURE_LOGGED_IN == 'true'
        run: |
          echo "::group::Deployment Validation (dev)"
          az deployment sub validate \
            --location eastus \
            --template-file infrastructure/bicep/main.bicep \
            --parameters environment=dev location=eastus
          echo "::endgroup::"

      - name: Run What-If Analysis
        if: env.AZURE_LOGGED_IN == 'true'
        id: whatif
        run: |
          echo "::group::What-If Analysis"
          az deployment sub what-if \
            --location eastus \
            --template-file infrastructure/bicep/main.bicep \
            --parameters environment=dev location=eastus \
            --result-format FullResourcePayloads > whatif.txt
          echo "::endgroup::"

          # Capture what-if output for PR comment
          echo "whatif<<EOF" >> $GITHUB_OUTPUT
          cat whatif.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment PR with Validation Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          WHATIF_OUTPUT: ${{ steps.whatif.outputs.whatif }}
        with:
          script: |
            const azureLoggedIn = process.env.AZURE_LOGGED_IN === 'true';
            const whatifOutput = process.env.WHATIF_OUTPUT || 'No output available';

            const deploymentSection = azureLoggedIn
              ? `**Deployment Validation**: ‚úÖ Passed

            <details>
            <summary>What-If Analysis</summary>

            \`\`\`
            ${whatifOutput}
            \`\`\`

            </details>`
              : `**Note**: Azure deployment validation skipped (Azure credentials not configured for PRs from forks)`;

            const output = `#### Bicep Validation Results üîç

            **Syntax Validation**: ‚úÖ Passed
            - \`main.bicep\` - Valid
            - \`main-minimal.bicep\` - Valid
            - All modules validated

            ${deploymentSection}

            *Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Validation Success
        run: |
          echo "‚úÖ Bicep syntax validation passed successfully!"
          echo "Infrastructure templates are syntactically correct."
          if [ "$AZURE_LOGGED_IN" = "true" ]; then
            echo "‚úÖ Azure deployment validation also passed!"
          else
            echo "‚ÑπÔ∏è  Azure deployment validation skipped (credentials not configured)"
          fi
